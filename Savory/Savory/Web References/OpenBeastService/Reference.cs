//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace Savory.OpenBeastService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentMarketDataVolOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentMarketDataPremOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentMarketDataStrikeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGridNodeIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitBeastCalcAutoUrlShareOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitLastOpenCalcOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastOpenCalcOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMainMenuCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubMenuCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastOpenAppNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Excel_GetMainMenuCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback Excel_GetSubMenuCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDirImgSIDNullOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateAuthTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddConnectionToDirForExcelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUserListWithTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisableTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisableConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SharedAutoURL_ValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeastApps_SharedAutoURL_UpdateClickCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoURL_Validate_User_InfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback Excel_GetXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestVersionIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestVersionSetupOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Savory.Properties.Settings.Default.Savory_OpenBeastService_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetCurrentMarketDataVolCompletedEventHandler GetCurrentMarketDataVolCompleted;
        
        /// <remarks/>
        public event GetCurrentMarketDataPremCompletedEventHandler GetCurrentMarketDataPremCompleted;
        
        /// <remarks/>
        public event GetCurrentMarketDataStrikeCompletedEventHandler GetCurrentMarketDataStrikeCompleted;
        
        /// <remarks/>
        public event GetGridNodeIDsCompletedEventHandler GetGridNodeIDsCompleted;
        
        /// <remarks/>
        public event SubmitBeastCalcAutoUrlShareCompletedEventHandler SubmitBeastCalcAutoUrlShareCompleted;
        
        /// <remarks/>
        public event SubmitLastOpenCalcCompletedEventHandler SubmitLastOpenCalcCompleted;
        
        /// <remarks/>
        public event GetLastOpenCalcCompletedEventHandler GetLastOpenCalcCompleted;
        
        /// <remarks/>
        public event GetMainMenuCategoryCompletedEventHandler GetMainMenuCategoryCompleted;
        
        /// <remarks/>
        public event GetSubMenuCategoryCompletedEventHandler GetSubMenuCategoryCompleted;
        
        /// <remarks/>
        public event GetLastOpenAppNameCompletedEventHandler GetLastOpenAppNameCompleted;
        
        /// <remarks/>
        public event Excel_GetMainMenuCategoryCompletedEventHandler Excel_GetMainMenuCategoryCompleted;
        
        /// <remarks/>
        public event Excel_GetSubMenuCategoryCompletedEventHandler Excel_GetSubMenuCategoryCompleted;
        
        /// <remarks/>
        public event SetDirImgSIDNullCompletedEventHandler SetDirImgSIDNullCompleted;
        
        /// <remarks/>
        public event ValidateAuthTokenCompletedEventHandler ValidateAuthTokenCompleted;
        
        /// <remarks/>
        public event AddConnectionToDirForExcelCompletedEventHandler AddConnectionToDirForExcelCompleted;
        
        /// <remarks/>
        public event GetAllUserListWithTokenCompletedEventHandler GetAllUserListWithTokenCompleted;
        
        /// <remarks/>
        public event DisableTokenCompletedEventHandler DisableTokenCompleted;
        
        /// <remarks/>
        public event DisableConnectionCompletedEventHandler DisableConnectionCompleted;
        
        /// <remarks/>
        public event SharedAutoURL_ValidateCompletedEventHandler SharedAutoURL_ValidateCompleted;
        
        /// <remarks/>
        public event BeastApps_SharedAutoURL_UpdateClickCountCompletedEventHandler BeastApps_SharedAutoURL_UpdateClickCountCompleted;
        
        /// <remarks/>
        public event ValidateUserCompletedEventHandler ValidateUserCompleted;
        
        /// <remarks/>
        public event AutoURL_Validate_User_InfoCompletedEventHandler AutoURL_Validate_User_InfoCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event Excel_GetXmlCompletedEventHandler Excel_GetXmlCompleted;
        
        /// <remarks/>
        public event GetLatestVersionIDCompletedEventHandler GetLatestVersionIDCompleted;
        
        /// <remarks/>
        public event GetLatestVersionSetupCompletedEventHandler GetLatestVersionSetupCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentMarketDataVol", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentMarketDataVol(string UserID, string ProductID) {
            object[] results = this.Invoke("GetCurrentMarketDataVol", new object[] {
                        UserID,
                        ProductID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentMarketDataVolAsync(string UserID, string ProductID) {
            this.GetCurrentMarketDataVolAsync(UserID, ProductID, null);
        }
        
        /// <remarks/>
        public void GetCurrentMarketDataVolAsync(string UserID, string ProductID, object userState) {
            if ((this.GetCurrentMarketDataVolOperationCompleted == null)) {
                this.GetCurrentMarketDataVolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentMarketDataVolOperationCompleted);
            }
            this.InvokeAsync("GetCurrentMarketDataVol", new object[] {
                        UserID,
                        ProductID}, this.GetCurrentMarketDataVolOperationCompleted, userState);
        }
        
        private void OnGetCurrentMarketDataVolOperationCompleted(object arg) {
            if ((this.GetCurrentMarketDataVolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentMarketDataVolCompleted(this, new GetCurrentMarketDataVolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentMarketDataPrem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentMarketDataPrem() {
            object[] results = this.Invoke("GetCurrentMarketDataPrem", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentMarketDataPremAsync() {
            this.GetCurrentMarketDataPremAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentMarketDataPremAsync(object userState) {
            if ((this.GetCurrentMarketDataPremOperationCompleted == null)) {
                this.GetCurrentMarketDataPremOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentMarketDataPremOperationCompleted);
            }
            this.InvokeAsync("GetCurrentMarketDataPrem", new object[0], this.GetCurrentMarketDataPremOperationCompleted, userState);
        }
        
        private void OnGetCurrentMarketDataPremOperationCompleted(object arg) {
            if ((this.GetCurrentMarketDataPremCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentMarketDataPremCompleted(this, new GetCurrentMarketDataPremCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentMarketDataStrike", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentMarketDataStrike() {
            object[] results = this.Invoke("GetCurrentMarketDataStrike", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentMarketDataStrikeAsync() {
            this.GetCurrentMarketDataStrikeAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentMarketDataStrikeAsync(object userState) {
            if ((this.GetCurrentMarketDataStrikeOperationCompleted == null)) {
                this.GetCurrentMarketDataStrikeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentMarketDataStrikeOperationCompleted);
            }
            this.InvokeAsync("GetCurrentMarketDataStrike", new object[0], this.GetCurrentMarketDataStrikeOperationCompleted, userState);
        }
        
        private void OnGetCurrentMarketDataStrikeOperationCompleted(object arg) {
            if ((this.GetCurrentMarketDataStrikeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentMarketDataStrikeCompleted(this, new GetCurrentMarketDataStrikeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGridNodeIDs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGridNodeIDs() {
            object[] results = this.Invoke("GetGridNodeIDs", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGridNodeIDsAsync() {
            this.GetGridNodeIDsAsync(null);
        }
        
        /// <remarks/>
        public void GetGridNodeIDsAsync(object userState) {
            if ((this.GetGridNodeIDsOperationCompleted == null)) {
                this.GetGridNodeIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGridNodeIDsOperationCompleted);
            }
            this.InvokeAsync("GetGridNodeIDs", new object[0], this.GetGridNodeIDsOperationCompleted, userState);
        }
        
        private void OnGetGridNodeIDsOperationCompleted(object arg) {
            if ((this.GetGridNodeIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGridNodeIDsCompleted(this, new GetGridNodeIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitBeastCalcAutoUrlShare", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SubmitBeastCalcAutoUrlShare(long pUserId, string pInstanceId, string pInstanceInfo, string pIpAddress, string pEmailIdList, string SenderEmail, string SenderMessage, string ClientType, string GUID) {
            object[] results = this.Invoke("SubmitBeastCalcAutoUrlShare", new object[] {
                        pUserId,
                        pInstanceId,
                        pInstanceInfo,
                        pIpAddress,
                        pEmailIdList,
                        SenderEmail,
                        SenderMessage,
                        ClientType,
                        GUID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitBeastCalcAutoUrlShareAsync(long pUserId, string pInstanceId, string pInstanceInfo, string pIpAddress, string pEmailIdList, string SenderEmail, string SenderMessage, string ClientType, string GUID) {
            this.SubmitBeastCalcAutoUrlShareAsync(pUserId, pInstanceId, pInstanceInfo, pIpAddress, pEmailIdList, SenderEmail, SenderMessage, ClientType, GUID, null);
        }
        
        /// <remarks/>
        public void SubmitBeastCalcAutoUrlShareAsync(long pUserId, string pInstanceId, string pInstanceInfo, string pIpAddress, string pEmailIdList, string SenderEmail, string SenderMessage, string ClientType, string GUID, object userState) {
            if ((this.SubmitBeastCalcAutoUrlShareOperationCompleted == null)) {
                this.SubmitBeastCalcAutoUrlShareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitBeastCalcAutoUrlShareOperationCompleted);
            }
            this.InvokeAsync("SubmitBeastCalcAutoUrlShare", new object[] {
                        pUserId,
                        pInstanceId,
                        pInstanceInfo,
                        pIpAddress,
                        pEmailIdList,
                        SenderEmail,
                        SenderMessage,
                        ClientType,
                        GUID}, this.SubmitBeastCalcAutoUrlShareOperationCompleted, userState);
        }
        
        private void OnSubmitBeastCalcAutoUrlShareOperationCompleted(object arg) {
            if ((this.SubmitBeastCalcAutoUrlShareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitBeastCalcAutoUrlShareCompleted(this, new SubmitBeastCalcAutoUrlShareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitLastOpenCalc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitLastOpenCalc(long pUserId, string pInstanceId, string pInstanceInfo) {
            this.Invoke("SubmitLastOpenCalc", new object[] {
                        pUserId,
                        pInstanceId,
                        pInstanceInfo});
        }
        
        /// <remarks/>
        public void SubmitLastOpenCalcAsync(long pUserId, string pInstanceId, string pInstanceInfo) {
            this.SubmitLastOpenCalcAsync(pUserId, pInstanceId, pInstanceInfo, null);
        }
        
        /// <remarks/>
        public void SubmitLastOpenCalcAsync(long pUserId, string pInstanceId, string pInstanceInfo, object userState) {
            if ((this.SubmitLastOpenCalcOperationCompleted == null)) {
                this.SubmitLastOpenCalcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitLastOpenCalcOperationCompleted);
            }
            this.InvokeAsync("SubmitLastOpenCalc", new object[] {
                        pUserId,
                        pInstanceId,
                        pInstanceInfo}, this.SubmitLastOpenCalcOperationCompleted, userState);
        }
        
        private void OnSubmitLastOpenCalcOperationCompleted(object arg) {
            if ((this.SubmitLastOpenCalcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitLastOpenCalcCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLastOpenCalc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLastOpenCalc(string UserId, string ClientType, string GUID) {
            object[] results = this.Invoke("GetLastOpenCalc", new object[] {
                        UserId,
                        ClientType,
                        GUID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastOpenCalcAsync(string UserId, string ClientType, string GUID) {
            this.GetLastOpenCalcAsync(UserId, ClientType, GUID, null);
        }
        
        /// <remarks/>
        public void GetLastOpenCalcAsync(string UserId, string ClientType, string GUID, object userState) {
            if ((this.GetLastOpenCalcOperationCompleted == null)) {
                this.GetLastOpenCalcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastOpenCalcOperationCompleted);
            }
            this.InvokeAsync("GetLastOpenCalc", new object[] {
                        UserId,
                        ClientType,
                        GUID}, this.GetLastOpenCalcOperationCompleted, userState);
        }
        
        private void OnGetLastOpenCalcOperationCompleted(object arg) {
            if ((this.GetLastOpenCalcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastOpenCalcCompleted(this, new GetLastOpenCalcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMainMenuCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMainMenuCategory(string UserId, string ClientType, string GUID) {
            object[] results = this.Invoke("GetMainMenuCategory", new object[] {
                        UserId,
                        ClientType,
                        GUID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMainMenuCategoryAsync(string UserId, string ClientType, string GUID) {
            this.GetMainMenuCategoryAsync(UserId, ClientType, GUID, null);
        }
        
        /// <remarks/>
        public void GetMainMenuCategoryAsync(string UserId, string ClientType, string GUID, object userState) {
            if ((this.GetMainMenuCategoryOperationCompleted == null)) {
                this.GetMainMenuCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMainMenuCategoryOperationCompleted);
            }
            this.InvokeAsync("GetMainMenuCategory", new object[] {
                        UserId,
                        ClientType,
                        GUID}, this.GetMainMenuCategoryOperationCompleted, userState);
        }
        
        private void OnGetMainMenuCategoryOperationCompleted(object arg) {
            if ((this.GetMainMenuCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMainMenuCategoryCompleted(this, new GetMainMenuCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubMenuCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSubMenuCategory(string CategoryId, string UserId, string ClientType, string GUID) {
            object[] results = this.Invoke("GetSubMenuCategory", new object[] {
                        CategoryId,
                        UserId,
                        ClientType,
                        GUID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubMenuCategoryAsync(string CategoryId, string UserId, string ClientType, string GUID) {
            this.GetSubMenuCategoryAsync(CategoryId, UserId, ClientType, GUID, null);
        }
        
        /// <remarks/>
        public void GetSubMenuCategoryAsync(string CategoryId, string UserId, string ClientType, string GUID, object userState) {
            if ((this.GetSubMenuCategoryOperationCompleted == null)) {
                this.GetSubMenuCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubMenuCategoryOperationCompleted);
            }
            this.InvokeAsync("GetSubMenuCategory", new object[] {
                        CategoryId,
                        UserId,
                        ClientType,
                        GUID}, this.GetSubMenuCategoryOperationCompleted, userState);
        }
        
        private void OnGetSubMenuCategoryOperationCompleted(object arg) {
            if ((this.GetSubMenuCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubMenuCategoryCompleted(this, new GetSubMenuCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLastOpenAppName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLastOpenAppName(string InstanceId, string ClientType, string GUID, string UserId) {
            object[] results = this.Invoke("GetLastOpenAppName", new object[] {
                        InstanceId,
                        ClientType,
                        GUID,
                        UserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastOpenAppNameAsync(string InstanceId, string ClientType, string GUID, string UserId) {
            this.GetLastOpenAppNameAsync(InstanceId, ClientType, GUID, UserId, null);
        }
        
        /// <remarks/>
        public void GetLastOpenAppNameAsync(string InstanceId, string ClientType, string GUID, string UserId, object userState) {
            if ((this.GetLastOpenAppNameOperationCompleted == null)) {
                this.GetLastOpenAppNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastOpenAppNameOperationCompleted);
            }
            this.InvokeAsync("GetLastOpenAppName", new object[] {
                        InstanceId,
                        ClientType,
                        GUID,
                        UserId}, this.GetLastOpenAppNameOperationCompleted, userState);
        }
        
        private void OnGetLastOpenAppNameOperationCompleted(object arg) {
            if ((this.GetLastOpenAppNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastOpenAppNameCompleted(this, new GetLastOpenAppNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Excel_GetMainMenuCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Excel_GetMainMenuCategory(string UserId, string ClientType, string GUID) {
            object[] results = this.Invoke("Excel_GetMainMenuCategory", new object[] {
                        UserId,
                        ClientType,
                        GUID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Excel_GetMainMenuCategoryAsync(string UserId, string ClientType, string GUID) {
            this.Excel_GetMainMenuCategoryAsync(UserId, ClientType, GUID, null);
        }
        
        /// <remarks/>
        public void Excel_GetMainMenuCategoryAsync(string UserId, string ClientType, string GUID, object userState) {
            if ((this.Excel_GetMainMenuCategoryOperationCompleted == null)) {
                this.Excel_GetMainMenuCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcel_GetMainMenuCategoryOperationCompleted);
            }
            this.InvokeAsync("Excel_GetMainMenuCategory", new object[] {
                        UserId,
                        ClientType,
                        GUID}, this.Excel_GetMainMenuCategoryOperationCompleted, userState);
        }
        
        private void OnExcel_GetMainMenuCategoryOperationCompleted(object arg) {
            if ((this.Excel_GetMainMenuCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Excel_GetMainMenuCategoryCompleted(this, new Excel_GetMainMenuCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Excel_GetSubMenuCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Excel_GetSubMenuCategory(string CategoryId, string UserId, string ClientType, string GUID) {
            object[] results = this.Invoke("Excel_GetSubMenuCategory", new object[] {
                        CategoryId,
                        UserId,
                        ClientType,
                        GUID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Excel_GetSubMenuCategoryAsync(string CategoryId, string UserId, string ClientType, string GUID) {
            this.Excel_GetSubMenuCategoryAsync(CategoryId, UserId, ClientType, GUID, null);
        }
        
        /// <remarks/>
        public void Excel_GetSubMenuCategoryAsync(string CategoryId, string UserId, string ClientType, string GUID, object userState) {
            if ((this.Excel_GetSubMenuCategoryOperationCompleted == null)) {
                this.Excel_GetSubMenuCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcel_GetSubMenuCategoryOperationCompleted);
            }
            this.InvokeAsync("Excel_GetSubMenuCategory", new object[] {
                        CategoryId,
                        UserId,
                        ClientType,
                        GUID}, this.Excel_GetSubMenuCategoryOperationCompleted, userState);
        }
        
        private void OnExcel_GetSubMenuCategoryOperationCompleted(object arg) {
            if ((this.Excel_GetSubMenuCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Excel_GetSubMenuCategoryCompleted(this, new Excel_GetSubMenuCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetDirImgSIDNull", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDirImgSIDNull() {
            this.Invoke("SetDirImgSIDNull", new object[0]);
        }
        
        /// <remarks/>
        public void SetDirImgSIDNullAsync() {
            this.SetDirImgSIDNullAsync(null);
        }
        
        /// <remarks/>
        public void SetDirImgSIDNullAsync(object userState) {
            if ((this.SetDirImgSIDNullOperationCompleted == null)) {
                this.SetDirImgSIDNullOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDirImgSIDNullOperationCompleted);
            }
            this.InvokeAsync("SetDirImgSIDNull", new object[0], this.SetDirImgSIDNullOperationCompleted, userState);
        }
        
        private void OnSetDirImgSIDNullOperationCompleted(object arg) {
            if ((this.SetDirImgSIDNullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDirImgSIDNullCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateAuthToken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ValidateAuthToken(string UserID, string ClientType, string GUID) {
            object[] results = this.Invoke("ValidateAuthToken", new object[] {
                        UserID,
                        ClientType,
                        GUID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ValidateAuthTokenAsync(string UserID, string ClientType, string GUID) {
            this.ValidateAuthTokenAsync(UserID, ClientType, GUID, null);
        }
        
        /// <remarks/>
        public void ValidateAuthTokenAsync(string UserID, string ClientType, string GUID, object userState) {
            if ((this.ValidateAuthTokenOperationCompleted == null)) {
                this.ValidateAuthTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateAuthTokenOperationCompleted);
            }
            this.InvokeAsync("ValidateAuthToken", new object[] {
                        UserID,
                        ClientType,
                        GUID}, this.ValidateAuthTokenOperationCompleted, userState);
        }
        
        private void OnValidateAuthTokenOperationCompleted(object arg) {
            if ((this.ValidateAuthTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateAuthTokenCompleted(this, new ValidateAuthTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddConnectionToDirForExcel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddConnectionToDirForExcel(string strUserName, string strPass, string GUID, string[] ImageName) {
            object[] results = this.Invoke("AddConnectionToDirForExcel", new object[] {
                        strUserName,
                        strPass,
                        GUID,
                        ImageName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddConnectionToDirForExcelAsync(string strUserName, string strPass, string GUID, string[] ImageName) {
            this.AddConnectionToDirForExcelAsync(strUserName, strPass, GUID, ImageName, null);
        }
        
        /// <remarks/>
        public void AddConnectionToDirForExcelAsync(string strUserName, string strPass, string GUID, string[] ImageName, object userState) {
            if ((this.AddConnectionToDirForExcelOperationCompleted == null)) {
                this.AddConnectionToDirForExcelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddConnectionToDirForExcelOperationCompleted);
            }
            this.InvokeAsync("AddConnectionToDirForExcel", new object[] {
                        strUserName,
                        strPass,
                        GUID,
                        ImageName}, this.AddConnectionToDirForExcelOperationCompleted, userState);
        }
        
        private void OnAddConnectionToDirForExcelOperationCompleted(object arg) {
            if ((this.AddConnectionToDirForExcelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddConnectionToDirForExcelCompleted(this, new AddConnectionToDirForExcelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUserListWithToken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllUserListWithToken(string username, string pwd) {
            object[] results = this.Invoke("GetAllUserListWithToken", new object[] {
                        username,
                        pwd});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUserListWithTokenAsync(string username, string pwd) {
            this.GetAllUserListWithTokenAsync(username, pwd, null);
        }
        
        /// <remarks/>
        public void GetAllUserListWithTokenAsync(string username, string pwd, object userState) {
            if ((this.GetAllUserListWithTokenOperationCompleted == null)) {
                this.GetAllUserListWithTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUserListWithTokenOperationCompleted);
            }
            this.InvokeAsync("GetAllUserListWithToken", new object[] {
                        username,
                        pwd}, this.GetAllUserListWithTokenOperationCompleted, userState);
        }
        
        private void OnGetAllUserListWithTokenOperationCompleted(object arg) {
            if ((this.GetAllUserListWithTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUserListWithTokenCompleted(this, new GetAllUserListWithTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DisableToken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DisableToken(string GUID, string userid, string ClientType) {
            object[] results = this.Invoke("DisableToken", new object[] {
                        GUID,
                        userid,
                        ClientType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DisableTokenAsync(string GUID, string userid, string ClientType) {
            this.DisableTokenAsync(GUID, userid, ClientType, null);
        }
        
        /// <remarks/>
        public void DisableTokenAsync(string GUID, string userid, string ClientType, object userState) {
            if ((this.DisableTokenOperationCompleted == null)) {
                this.DisableTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisableTokenOperationCompleted);
            }
            this.InvokeAsync("DisableToken", new object[] {
                        GUID,
                        userid,
                        ClientType}, this.DisableTokenOperationCompleted, userState);
        }
        
        private void OnDisableTokenOperationCompleted(object arg) {
            if ((this.DisableTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisableTokenCompleted(this, new DisableTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DisableConnection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DisableConnection(string GUID, string userid, string ConnectionID) {
            object[] results = this.Invoke("DisableConnection", new object[] {
                        GUID,
                        userid,
                        ConnectionID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DisableConnectionAsync(string GUID, string userid, string ConnectionID) {
            this.DisableConnectionAsync(GUID, userid, ConnectionID, null);
        }
        
        /// <remarks/>
        public void DisableConnectionAsync(string GUID, string userid, string ConnectionID, object userState) {
            if ((this.DisableConnectionOperationCompleted == null)) {
                this.DisableConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisableConnectionOperationCompleted);
            }
            this.InvokeAsync("DisableConnection", new object[] {
                        GUID,
                        userid,
                        ConnectionID}, this.DisableConnectionOperationCompleted, userState);
        }
        
        private void OnDisableConnectionOperationCompleted(object arg) {
            if ((this.DisableConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisableConnectionCompleted(this, new DisableConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SharedAutoURL_Validate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SharedAutoURL_Validate(string RefID, string ClientType) {
            object[] results = this.Invoke("SharedAutoURL_Validate", new object[] {
                        RefID,
                        ClientType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SharedAutoURL_ValidateAsync(string RefID, string ClientType) {
            this.SharedAutoURL_ValidateAsync(RefID, ClientType, null);
        }
        
        /// <remarks/>
        public void SharedAutoURL_ValidateAsync(string RefID, string ClientType, object userState) {
            if ((this.SharedAutoURL_ValidateOperationCompleted == null)) {
                this.SharedAutoURL_ValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSharedAutoURL_ValidateOperationCompleted);
            }
            this.InvokeAsync("SharedAutoURL_Validate", new object[] {
                        RefID,
                        ClientType}, this.SharedAutoURL_ValidateOperationCompleted, userState);
        }
        
        private void OnSharedAutoURL_ValidateOperationCompleted(object arg) {
            if ((this.SharedAutoURL_ValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SharedAutoURL_ValidateCompleted(this, new SharedAutoURL_ValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BeastApps_SharedAutoURL_UpdateClickCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BeastApps_SharedAutoURL_UpdateClickCount(string pRefId) {
            this.Invoke("BeastApps_SharedAutoURL_UpdateClickCount", new object[] {
                        pRefId});
        }
        
        /// <remarks/>
        public void BeastApps_SharedAutoURL_UpdateClickCountAsync(string pRefId) {
            this.BeastApps_SharedAutoURL_UpdateClickCountAsync(pRefId, null);
        }
        
        /// <remarks/>
        public void BeastApps_SharedAutoURL_UpdateClickCountAsync(string pRefId, object userState) {
            if ((this.BeastApps_SharedAutoURL_UpdateClickCountOperationCompleted == null)) {
                this.BeastApps_SharedAutoURL_UpdateClickCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeastApps_SharedAutoURL_UpdateClickCountOperationCompleted);
            }
            this.InvokeAsync("BeastApps_SharedAutoURL_UpdateClickCount", new object[] {
                        pRefId}, this.BeastApps_SharedAutoURL_UpdateClickCountOperationCompleted, userState);
        }
        
        private void OnBeastApps_SharedAutoURL_UpdateClickCountOperationCompleted(object arg) {
            if ((this.BeastApps_SharedAutoURL_UpdateClickCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeastApps_SharedAutoURL_UpdateClickCountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ValidateUser(string strUserName, string strPass, string ClientType) {
            object[] results = this.Invoke("ValidateUser", new object[] {
                        strUserName,
                        strPass,
                        ClientType});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ValidateUserAsync(string strUserName, string strPass, string ClientType) {
            this.ValidateUserAsync(strUserName, strPass, ClientType, null);
        }
        
        /// <remarks/>
        public void ValidateUserAsync(string strUserName, string strPass, string ClientType, object userState) {
            if ((this.ValidateUserOperationCompleted == null)) {
                this.ValidateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUserOperationCompleted);
            }
            this.InvokeAsync("ValidateUser", new object[] {
                        strUserName,
                        strPass,
                        ClientType}, this.ValidateUserOperationCompleted, userState);
        }
        
        private void OnValidateUserOperationCompleted(object arg) {
            if ((this.ValidateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateUserCompleted(this, new ValidateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoURL_Validate_User_Info", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AutoURL_Validate_User_Info(string refNo, string UserHostAddress, int ApplicationCode, string ClientType) {
            object[] results = this.Invoke("AutoURL_Validate_User_Info", new object[] {
                        refNo,
                        UserHostAddress,
                        ApplicationCode,
                        ClientType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AutoURL_Validate_User_InfoAsync(string refNo, string UserHostAddress, int ApplicationCode, string ClientType) {
            this.AutoURL_Validate_User_InfoAsync(refNo, UserHostAddress, ApplicationCode, ClientType, null);
        }
        
        /// <remarks/>
        public void AutoURL_Validate_User_InfoAsync(string refNo, string UserHostAddress, int ApplicationCode, string ClientType, object userState) {
            if ((this.AutoURL_Validate_User_InfoOperationCompleted == null)) {
                this.AutoURL_Validate_User_InfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoURL_Validate_User_InfoOperationCompleted);
            }
            this.InvokeAsync("AutoURL_Validate_User_Info", new object[] {
                        refNo,
                        UserHostAddress,
                        ApplicationCode,
                        ClientType}, this.AutoURL_Validate_User_InfoOperationCompleted, userState);
        }
        
        private void OnAutoURL_Validate_User_InfoOperationCompleted(object arg) {
            if ((this.AutoURL_Validate_User_InfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoURL_Validate_User_InfoCompleted(this, new AutoURL_Validate_User_InfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangePassword(long lUserId, string oldPassword, string newPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        lUserId,
                        oldPassword,
                        newPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(long lUserId, string oldPassword, string newPassword) {
            this.ChangePasswordAsync(lUserId, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(long lUserId, string oldPassword, string newPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        lUserId,
                        oldPassword,
                        newPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Excel_GetXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Excel_GetXml(string CalcID, string LastUpdatedDate) {
            object[] results = this.Invoke("Excel_GetXml", new object[] {
                        CalcID,
                        LastUpdatedDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Excel_GetXmlAsync(string CalcID, string LastUpdatedDate) {
            this.Excel_GetXmlAsync(CalcID, LastUpdatedDate, null);
        }
        
        /// <remarks/>
        public void Excel_GetXmlAsync(string CalcID, string LastUpdatedDate, object userState) {
            if ((this.Excel_GetXmlOperationCompleted == null)) {
                this.Excel_GetXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcel_GetXmlOperationCompleted);
            }
            this.InvokeAsync("Excel_GetXml", new object[] {
                        CalcID,
                        LastUpdatedDate}, this.Excel_GetXmlOperationCompleted, userState);
        }
        
        private void OnExcel_GetXmlOperationCompleted(object arg) {
            if ((this.Excel_GetXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Excel_GetXmlCompleted(this, new Excel_GetXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestVersionID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExeChunk GetLatestVersionID(string UserID, string ObjectID) {
            object[] results = this.Invoke("GetLatestVersionID", new object[] {
                        UserID,
                        ObjectID});
            return ((ExeChunk)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestVersionIDAsync(string UserID, string ObjectID) {
            this.GetLatestVersionIDAsync(UserID, ObjectID, null);
        }
        
        /// <remarks/>
        public void GetLatestVersionIDAsync(string UserID, string ObjectID, object userState) {
            if ((this.GetLatestVersionIDOperationCompleted == null)) {
                this.GetLatestVersionIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestVersionIDOperationCompleted);
            }
            this.InvokeAsync("GetLatestVersionID", new object[] {
                        UserID,
                        ObjectID}, this.GetLatestVersionIDOperationCompleted, userState);
        }
        
        private void OnGetLatestVersionIDOperationCompleted(object arg) {
            if ((this.GetLatestVersionIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestVersionIDCompleted(this, new GetLatestVersionIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestVersionSetup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExeChunk[] GetLatestVersionSetup(string UserID, string ObjectID) {
            object[] results = this.Invoke("GetLatestVersionSetup", new object[] {
                        UserID,
                        ObjectID});
            return ((ExeChunk[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestVersionSetupAsync(string UserID, string ObjectID) {
            this.GetLatestVersionSetupAsync(UserID, ObjectID, null);
        }
        
        /// <remarks/>
        public void GetLatestVersionSetupAsync(string UserID, string ObjectID, object userState) {
            if ((this.GetLatestVersionSetupOperationCompleted == null)) {
                this.GetLatestVersionSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestVersionSetupOperationCompleted);
            }
            this.InvokeAsync("GetLatestVersionSetup", new object[] {
                        UserID,
                        ObjectID}, this.GetLatestVersionSetupOperationCompleted, userState);
        }
        
        private void OnGetLatestVersionSetupOperationCompleted(object arg) {
            if ((this.GetLatestVersionSetupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestVersionSetupCompleted(this, new GetLatestVersionSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ExeChunk {
        
        private string productVersionField;
        
        private string noOfChunksField;
        
        private string chunkNameField;
        
        private byte[] chunkDataField;
        
        /// <remarks/>
        public string productVersion {
            get {
                return this.productVersionField;
            }
            set {
                this.productVersionField = value;
            }
        }
        
        /// <remarks/>
        public string NoOfChunks {
            get {
                return this.noOfChunksField;
            }
            set {
                this.noOfChunksField = value;
            }
        }
        
        /// <remarks/>
        public string chunkName {
            get {
                return this.chunkNameField;
            }
            set {
                this.chunkNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] chunkData {
            get {
                return this.chunkDataField;
            }
            set {
                this.chunkDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCurrentMarketDataVolCompletedEventHandler(object sender, GetCurrentMarketDataVolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentMarketDataVolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentMarketDataVolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCurrentMarketDataPremCompletedEventHandler(object sender, GetCurrentMarketDataPremCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentMarketDataPremCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentMarketDataPremCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCurrentMarketDataStrikeCompletedEventHandler(object sender, GetCurrentMarketDataStrikeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentMarketDataStrikeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentMarketDataStrikeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGridNodeIDsCompletedEventHandler(object sender, GetGridNodeIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGridNodeIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGridNodeIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SubmitBeastCalcAutoUrlShareCompletedEventHandler(object sender, SubmitBeastCalcAutoUrlShareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitBeastCalcAutoUrlShareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitBeastCalcAutoUrlShareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SubmitLastOpenCalcCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLastOpenCalcCompletedEventHandler(object sender, GetLastOpenCalcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastOpenCalcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastOpenCalcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMainMenuCategoryCompletedEventHandler(object sender, GetMainMenuCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMainMenuCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMainMenuCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubMenuCategoryCompletedEventHandler(object sender, GetSubMenuCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubMenuCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubMenuCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLastOpenAppNameCompletedEventHandler(object sender, GetLastOpenAppNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastOpenAppNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastOpenAppNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Excel_GetMainMenuCategoryCompletedEventHandler(object sender, Excel_GetMainMenuCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Excel_GetMainMenuCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Excel_GetMainMenuCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Excel_GetSubMenuCategoryCompletedEventHandler(object sender, Excel_GetSubMenuCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Excel_GetSubMenuCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Excel_GetSubMenuCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetDirImgSIDNullCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateAuthTokenCompletedEventHandler(object sender, ValidateAuthTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateAuthTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateAuthTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddConnectionToDirForExcelCompletedEventHandler(object sender, AddConnectionToDirForExcelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddConnectionToDirForExcelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddConnectionToDirForExcelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllUserListWithTokenCompletedEventHandler(object sender, GetAllUserListWithTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUserListWithTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUserListWithTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DisableTokenCompletedEventHandler(object sender, DisableTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisableTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisableTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DisableConnectionCompletedEventHandler(object sender, DisableConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisableConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisableConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SharedAutoURL_ValidateCompletedEventHandler(object sender, SharedAutoURL_ValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SharedAutoURL_ValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SharedAutoURL_ValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BeastApps_SharedAutoURL_UpdateClickCountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateUserCompletedEventHandler(object sender, ValidateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AutoURL_Validate_User_InfoCompletedEventHandler(object sender, AutoURL_Validate_User_InfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoURL_Validate_User_InfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoURL_Validate_User_InfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Excel_GetXmlCompletedEventHandler(object sender, Excel_GetXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Excel_GetXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Excel_GetXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLatestVersionIDCompletedEventHandler(object sender, GetLatestVersionIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestVersionIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestVersionIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExeChunk Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExeChunk)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLatestVersionSetupCompletedEventHandler(object sender, GetLatestVersionSetupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestVersionSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestVersionSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExeChunk[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExeChunk[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591